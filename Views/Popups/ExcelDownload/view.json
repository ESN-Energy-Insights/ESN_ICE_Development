{
  "custom": {
    "DeviceName": "Compressor1",
    "Output": null
  },
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\t#self.getChild(\"root\").custom.startdate \u003d system.date.addDays(system.date.now(),-7)\n\tself.getChild(\"root\").getChild(\"EndDate\").props.value \u003d system.date.now()\n\tself.getChild(\"root\").getChild(\"StartDate\").props.value \u003d system.date.addDays(system.date.now(),-7)"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "tagPath": "[ESN]Opto22/EdgeNodes/EMK1-0001/Loads/Compressor1"
  },
  "propConfig": {
    "custom.DeviceName": {
      "binding": {
        "config": {
          "expression": "split({view.params.tagPath},\"/\")[4,0]"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.Output": {
      "binding": {
        "config": {
          "expression": "{view.params.tagPath}"
        },
        "transforms": [
          {
            "code": "#\tmypaths \u003d [value+\"/Data/Totals/Power/Total_TruePower\",\n#\tvalue+\"/Data/PhaseA/Power/PhA_TruePower\",\n#\tvalue+\"/Data/PhaseB/Power/PhB_TruePower\",\n#\tvalue+\"/Data/PhaseC/Power/PhC_TruePower\",\n#\tvalue+\"/Data/Totals/Power/Total_ReactivePower\",\n#\tvalue+\"/Data/PhaseA/Power/PhA_ReactivePower\",\n#\tvalue+\"/Data/PhaseB/Power/PhB_ReactivePower\",\n#\tvalue+\"/Data/PhaseC/Power/PhC_ReactivePower\"]\n#\tmycolumnNames\u003d [self.custom.DeviceName+\" - Total Real Power (kW)\",\n#\tself.custom.DeviceName+\" - Phase A Real Power (kW)\",\n#\tself.custom.DeviceName+\" - Phase B Real Power (kW)\",\n#\tself.custom.DeviceName+\" - Phase C Real Power (kW)\",\n#\tself.custom.DeviceName+\" - Total Reactive Power (kW)\",\n#\tself.custom.DeviceName+\" - Phase A Reactive Power (kW)\",\n#\tself.custom.DeviceName+\" - Phase B Reactive Power (kW)\",\n#\tself.custom.DeviceName+\" - Phase C Reactive Power (kW)\"]\n#\tmystartdate \u003d system.date.midnight(self.getChild(\"root\").getChild(\"StartDate\").props.value)\n#\tmyenddate \u003d system.date.addDays(system.date.midnight(self.getChild(\"root\").getChild(\"EndDate\").props.value),1)\n#\tdataset \u003d system.tag.queryTagHistory(paths\u003dmypaths, startDate\u003dmystartdate, endDate\u003dmyenddate, aggregationMode\u003d\"Average\", returnFormat\u003d\"Wide\", intervalMinutes\u003dself.getChild(\"root\").getChild(\"Dropdown\").props.value, columnNames\u003dmycolumnNames )\n#\treturn dataset",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "params.tagPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 400,
      "width": 400
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "height": 32,
          "width": 86,
          "x": 58,
          "y": 117
        },
        "props": {
          "style": {
            "classes": "All_Text/Input_Label_Text_small"
          },
          "text": "Start Date"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "StartDate"
        },
        "position": {
          "height": 32,
          "width": 153,
          "x": 154,
          "y": 117
        },
        "props": {
          "formattedValue": "Apr 4, 2024 10:17 PM",
          "pickerType": "date",
          "value": {
            "$": [
              "ts",
              192,
              1712888253366
            ],
            "$ts": 1712283453366
          }
        },
        "type": "ia.input.date-time-input"
      },
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "height": 32,
          "width": 329,
          "x": 25,
          "y": 16
        },
        "props": {
          "style": {
            "classes": "All_Text/Header_Text",
            "textAlign": "center"
          },
          "text": "Download Data to Excel"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_1"
        },
        "position": {
          "height": 32,
          "width": 195,
          "x": 85.5,
          "y": 56
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "{view.custom.DeviceName}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_2"
        },
        "position": {
          "height": 32,
          "width": 86,
          "x": 58,
          "y": 165
        },
        "props": {
          "style": {
            "classes": "All_Text/Input_Label_Text_small"
          },
          "text": "End Date"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "EndDate"
        },
        "position": {
          "height": 32,
          "width": 153,
          "x": 154,
          "y": 167
        },
        "props": {
          "formattedValue": "Apr 11, 2024 10:17 PM",
          "pickerType": "date",
          "value": {
            "$": [
              "ts",
              192,
              1712888253365
            ],
            "$ts": 1712888253365
          }
        },
        "type": "ia.input.date-time-input"
      },
      {
        "meta": {
          "name": "Dropdown"
        },
        "position": {
          "height": 36,
          "width": 154,
          "x": 153.5,
          "y": 217
        },
        "props": {
          "options": [
            {
              "label": "5 min",
              "value": 5
            },
            {
              "label": "15 min",
              "value": 15
            },
            {
              "label": "Hourly",
              "value": 60
            }
          ],
          "value": 60
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "Label_3"
        },
        "position": {
          "height": 32,
          "width": 86,
          "x": 58,
          "y": 218
        },
        "props": {
          "style": {
            "classes": "All_Text/Input_Label_Text_small"
          },
          "text": "Interval"
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttagprefix \u003d self.view.params.tagPath\n\tmypaths \u003d [tagprefix+\"/Data/Totals/Power/Total_TruePower\",\n\ttagprefix+\"/Data/PhaseA/Power/PhA_TruePower\",\n\ttagprefix+\"/Data/PhaseB/Power/PhB_TruePower\",\n\ttagprefix+\"/Data/PhaseC/Power/PhC_TruePower\",\n\ttagprefix+\"/Data/Totals/Power/Total_ReactivePower\",\n\ttagprefix+\"/Data/PhaseA/Power/PhA_ReactivePower\",\n\ttagprefix+\"/Data/PhaseB/Power/PhB_ReactivePower\",\n\ttagprefix+\"/Data/PhaseC/Power/PhC_ReactivePower\"]\n\tmycolumnNames\u003d [\"Total Real Power (kW)\",\n\t\"Phase A Real Power (kW)\",\n\t\"Phase B Real Power (kW)\",\n\t\"Phase C Real Power (kW)\",\n\t\"Total Reactive Power (kW)\",\n\t\"Phase A Reactive Power (kW)\",\n\t\"Phase B Reactive Power (kW)\",\n\t\"Phase C Reactive Power (kW)\"]\n\tmystartdate \u003d system.date.midnight(self.getSibling(\"StartDate\").props.value)\n\tmyenddate \u003d system.date.addDays(system.date.midnight(self.getSibling(\"EndDate\").props.value),1)\n\tdataset \u003d system.tag.queryTagHistory(paths\u003dmypaths, startDate\u003dmystartdate, endDate\u003dmyenddate, aggregationMode\u003d\"Average\", returnFormat\u003d\"Wide\", intervalMinutes\u003dself.getSibling(\"Dropdown\").props.value, columnNames\u003dmycolumnNames )\n\tdata \u003d system.dataset.toExcel(True, [dataset])\n\tfilename \u003d self.view.custom.DeviceName+\".xlsx\"\n\tsystem.perspective.download(filename, data)\n\n\t\n#\timport org.apache.poi.ss.usermodel.Cell as Cell\n#\timport org.apache.poi.ss.usermodel.Row as Row\n#\timport org.apache.poi.ss.usermodel.Sheet as Sheet\n#\timport org.apache.poi.ss.usermodel.Workbook as Workbook\n#\timport org.apache.poi.xssf.usermodel.XSSFWorkbook as XSSFWorkbook\n#\timport org.apache.poi.xssf.usermodel.XSSFDataFormat as XSSFDataFormat\n#\tfrom java.io import FileOutputStream, ByteArrayOutputStream\n#\t\n#\tdsType \u003d str(type(self.view.custom.Output))\n#\t\n#\t# Convert to PyDataSet, if needed\n#\tif \u0027com.inductiveautomation.ignition.common.BasicDataset\u0027 in dsType:\n#\t\tpyDS \u003d system.dataset.toPyDataSet(dsIn)\n#\telif \u0027com.inductiveautomation.ignition.common.JsonDataset\u0027 in dsType:\n#\t\tpyDS \u003d system.dataset.toPyDataSet(dsIn)\n#\telif \u0027com.inductiveautomation.ignition.common.script.builtin.DatasetUtilities$PyDataSet\u0027 in dsType:\n#\t\tpyDS \u003d dsIn\n#\telse:\n#\t\traise Exception(\u0027Not a valid DataSet\u0027)\n\n#\toutput \u003d FileOutputStream(\"EnergyInsightsDataExport\")\n#\t# Create workbook\n#\twb \u003d XSSFWorkbook()\n#\n#\t# Create Sheet\n#\tsheet \u003d wb.createSheet(self.view.custom.DeviceName)\n#\n#\t# Create formatter\n#\tfmt \u003d wb.createDataFormat()\n#\n#\t# Create style for headers\n#\theaderStyle \u003d wb.createCellStyle()\n#\theaderFont \u003d wb.createFont()\n#\theaderFont.setBold(True)\n#\theaderFont.setFontHeightInPoints(10)\n#\theaderFont.setFontName(\u0027Arial\u0027)\n#\theaderStyle.setFont(headerFont)\n#\n#\t# Create style for data\n#\trowStyle \u003d wb.createCellStyle()\n#\trowFont \u003d wb.createFont()\n#\trowFont.setBold(False)\n#\trowFont.setFontHeightInPoints(10)\n#\trowFont.setFontName(\u0027Arial\u0027)\n#\trowStyle.setFont(rowFont)\n#\n#\t# Create style for dates.\n#\tdateStyle \u003d wb.createCellStyle()\n#\tdateFont \u003d wb.createFont()\n#\tdateFont.setBold(False)\n#\tdateFont.setFontHeightInPoints(10)\n#\tdateFont.setFontName(\u0027Arial\u0027)\n#\tdateStyle.setFont(dateFont)\n#\tdateStyle.setDataFormat(fmt.getFormat(dateFormat.lower()))\n#\n#\t# Create header row in the sheet\n#\theaderRow \u003d sheet.createRow(firstRow)\n#\tfor j, col in enumerate(pyDS.getColumnNames()):\n#\t\tcell \u003d headerRow.createCell(j+firstCol)\n#\t\tcell.setCellStyle(headerStyle)\n#\t\tcell.setCellValue(col)\n#\t# Create data rows\t\n#\tfor i, row in enumerate(pyDS):\n#\t\tdataRow \u003d sheet.createRow(i+1+firstRow)\n#\t\tfor j, col in enumerate(list(row)):\n#\t\t\tcell \u003d dataRow.createCell(j+firstCol)\n#\t\t\tcell.setCellValue(col)\n#\t\t\tcell.setCellStyle(rowStyle)\n#\t\t\t# Check if it\u0027s a date, and set cell format accordingly \n#\t\t\tif \u0027java.util.Date\u0027 in str(type(col)):\n#\t\t\t\tcell.setCellStyle(dateStyle)\n#\t\n#\t# Resize the columns\t\t\n#\tfor i in range(pyDS.getColumnCount()):\n#\t\tsheet.autoSizeColumn(i)\t\n#\n#\twb.write(output)\n#\toutput.close()\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Button"
        },
        "position": {
          "height": 43,
          "width": 124,
          "x": 133,
          "y": 324
        },
        "props": {
          "text": "Download"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "TextField",
          "visible": false
        },
        "position": {
          "height": 32,
          "width": 150,
          "x": 157,
          "y": 269
        },
        "props": {
          "text": "C:\\Users\\becca.gillespie\\OneDrive - Energy Systems Network\\Documents\\EnergyInsights\\TrainingAndCommunity"
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label_5",
          "visible": false
        },
        "position": {
          "height": 32,
          "rotate": {
            "anchor": "50% 172%"
          },
          "width": 86,
          "x": 65,
          "y": 269
        },
        "props": {
          "style": {
            "classes": "All_Text/Input_Label_Text_small"
          },
          "text": "File path"
        },
        "type": "ia.display.label"
      }
    ],
    "custom": {
      "enddate": {
        "$": [
          "ts",
          192,
          1712723513928
        ],
        "$ts": 1712723513928
      },
      "lookback": 7
    },
    "meta": {
      "name": "root"
    },
    "position": {
      "x": -17,
      "y": -1
    },
    "type": "ia.container.coord"
  }
}